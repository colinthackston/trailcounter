When we started working on our Milestone 3 we were curious about the raw data that we were recieving from the accelerometer. The data sheet showed that it is a 12 bit number, but we were only seeing 8 bits. With the help of Bryce we realized that our shifting of the data from the registers was not right and we were losing data. Once the shifting was fixed we were getting numbers that were from 0 to 4096. Later we also realized that there was not data in the negative direction so we looked into it and noticed that the data was stored in a uint16_t instead of an int16_t. Once that was all fixed we finally had real raw data that looked good to us.

Now that the correct data was being read we needed to get it over to the SD card. That proved a challenge, becuase the SD card has been taking us over 3 weeks to figure out. With every advance forward it presented more problems to think about. One of the major issues is the write speed. We set up a test for the accelerometer to read 2000 times at 100Hz before it stopped reading. Once it reached 2000 the writing tthread would finish its current write and stop. When we looked at the data file there was about half as much data written as read. So the writing thread was not being able to keep up with the data so after talking with Thijs he let us know that writing to the SD card in 512 byte blocks will achieve the fastest writing speeds. We also looked online and it confirmed his statement so we figured out a was to go through the data and pack it all into a 512 byte block. The way we stored the data in the text file was allowing 5 bytes for each reading to include the negative sign and two spaces and a new line character meant we had 18 bytes of data per line. We divided 512 by 18 and it gave us 28. It wasn't perfect but based on our needs we would be writing 504 byte block and it was the closest we could get to the 512.

Once t
